import streamlit as st
import pandas as pd
import plotly.express as px
from datetime import datetime

# Alap adatok
if "fuvarok" not in st.session_state:
    st.session_state.fuvarok = pd.DataFrame(columns=["Rendsz√°m", "Fuvar neve", "Kateg√≥ria", "Megrendel≈ë", "Kezdete", "V√©ge"])

if "jarmuvek" not in st.session_state:
    st.session_state.jarmuvek = ["AO-BK-447", "RXD-624"]

if "kategoriak" not in st.session_state:
    st.session_state.kategoriak = ["Belf√∂ldi", "K√ºlf√∂ldi", "Di√°kcsoport", "Szerviz"]

if "megrendelok" not in st.session_state:
    st.session_state.megrendelok = []

st.title("üöå Busz Fuvar Id≈ëvonal")

tab1, tab2, tab3, tab4 = st.tabs(["üìÖ Fuvarok", "‚ûï √öj fuvar", "‚öôÔ∏è Be√°ll√≠t√°sok", "üßæ Megrendel≈ëk"])

# 1. ID≈êVONAL N√âZET
with tab1:
    st.header("Fuvarok id≈ëvonal n√©zete")
    df = st.session_state.fuvarok

    megr_szures = st.selectbox("Sz≈±r√©s megrendel≈ë szerint", ["√ñsszes"] + st.session_state.megrendelok)
    if megr_szures != "√ñsszes":
        df = df[df["Megrendel≈ë"] == megr_szures]

    if not df.empty:
        fig = px.timeline(
            df,
            x_start="Kezdete",
            x_end="V√©ge",
            y="Rendsz√°m",
            color="Kateg√≥ria",
            text="Fuvar neve",
            title="Busz Fuvar Id≈ëvonal"
        )
        fig.update_yaxes(autorange="reversed")
        fig.update_layout(height=600)
        st.plotly_chart(fig, use_container_width=True)
    else:
        st.info("Nincs megjelen√≠thet≈ë fuvar.")

# 2. FUVAR HOZZ√ÅAD√ÅS
with tab2:
    st.header("√öj fuvar r√∂gz√≠t√©se")
    with st.form("fuvar_form"):
        rendszam = st.selectbox("Rendsz√°m", st.session_state.jarmuvek)
        nev = st.text_input("Fuvar neve")
        kategoria = st.selectbox("Kateg√≥ria", st.session_state.kategoriak)
        megrendelo = st.selectbox("Megrendel≈ë", [""] + st.session_state.megrendelok)
        kezdete = st.date_input("Kezd≈ë d√°tum")
        vege = st.date_input("V√©ge d√°tum")

        submitted = st.form_submit_button("Fuvar ment√©se")
        if submitted:
            uj_sor = pd.DataFrame([{
                "Rendsz√°m": rendszam,
                "Fuvar neve": nev,
                "Kateg√≥ria": kategoria,
                "Megrendel≈ë": megrendelo,
                "Kezdete": datetime.combine(kezdete, datetime.min.time()),
                "V√©ge": datetime.combine(vege, datetime.min.time())
            }])
            st.session_state.fuvarok = pd.concat([st.session_state.fuvarok, uj_sor], ignore_index=True)
            st.success("Fuvar sikeresen hozz√°adva!")

# 3. BE√ÅLL√çT√ÅSOK
with tab3:
    st.header("Be√°ll√≠t√°sok")

    with st.expander("üöç J√°rm≈±vek"):
        uj_jarmu = st.text_input("√öj rendsz√°m hozz√°ad√°sa")
        if st.button("Hozz√°ad√°s"):
            if uj_jarmu and uj_jarmu not in st.session_state.jarmuvek:
                st.session_state.jarmuvek.append(uj_jarmu)
                st.success(f"{uj_jarmu} hozz√°adva")

    with st.expander("üè∑Ô∏è Kateg√≥ri√°k"):
        uj_kategoria = st.text_input("√öj kateg√≥ria hozz√°ad√°sa")
        if st.button("Kateg√≥ria hozz√°ad√°sa"):
            if uj_kategoria and uj_kategoria not in st.session_state.kategoriak:
                st.session_state.kategoriak.append(uj_kategoria)
                st.success(f"{uj_kategoria} kateg√≥ria hozz√°adva")

# 4. MEGRENDEL≈êK
with tab4:
    st.header("Megrendel≈ëk kezel√©se")
    uj_megrendelo = st.text_input("√öj megrendel≈ë neve")
    if st.button("Megrendel≈ë hozz√°ad√°sa"):
        if uj_megrendelo and uj_megrendelo not in st.session_state.megrendelok:
            st.session_state.megrendelok.append(uj_megrendelo)
            st.success(f"{uj_megrendelo} megrendel≈ë hozz√°adva")